import numpy as np
import pandas as pd

data = pd.read_csv("play_tennis.csv")
print(data)




data.drop(["day"], axis=1, inplace=True)
print(data)



def naive_bayes_predict(data,target,test):
  # Calculate target value counts and probabilities
  target_counts = data[target].value_counts().to_dict()
  target_probs = (data[data.columns[data.shape[1] - 1]].value_counts() / data.shape[0]).to_dict()
  
  # Initialize dictionary for predicted probabilities
  predictions = {}
  
  # Calculate probabilities for each target value
  for val,count in target_counts.items():
    prob=1
    subset = data[data[target]==val]

    #calculate attribute probabilities
    for attr,value in test.items():
      attr_prob=subset[subset[attr]==value].shape[0] / subset.shape[0]
      prob*=attr_prob

    # Store the predicted Probability for the target value
    predictions[val] = target_probs[val] * prob
  
  return predictions


test= {"outlook": "Sunny", "temp": "Cool", "humidity": "High", "wind": "Strong"}


prediction = naive_bayes_predict(data.copy(), data.columns[data.shape[1] - 1], test)
print("Prediction is:",prediction)